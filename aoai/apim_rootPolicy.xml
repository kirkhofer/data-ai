<policies>
	<inbound>
		<base />
		<set-variable name="path" value="@(context.Request.OriginalUrl.Path.Trim('/').Substring(context.Api.Path.Trim('/').Length))" />
		<choose>
            <when condition="@(context.Variables.GetValueOrDefault<string>("path").ToLower().StartsWith("/deployments/gpt-35-turbo/"))">
<set-backend-service backend-id="lb-gpt-35-turbo" />
</when>
<when condition="@(context.Variables.GetValueOrDefault<string>("path").ToLower().StartsWith("/deployments/gpt-4o-mini/"))">
<set-backend-service backend-id="lb-gpt-4o-mini" />
</when>
<when condition="@(context.Variables.GetValueOrDefault<string>("path").ToLower().StartsWith("/deployments/gpt-4o/"))">
<set-backend-service backend-id="lb-gpt-4o" />
</when>
		</choose>
		<!-- Backend Managed Identity -->
		<authentication-managed-identity resource="https://cognitiveservices.azure.com" output-token-variable-name="managed-id-access-token" ignore-error="false" />
		<set-header name="Authorization" exists-action="override">
			<value>@("Bearer " + (string)context.Variables["managed-id-access-token"])</value>
		</set-header>
		<set-header name="api-key" exists-action="delete" />
	</inbound>
	<backend>
		<retry condition="@(context.Response.StatusCode == 429 || context.Response.StatusCode == 500)" count="6" interval="1" first-fast-retry="true">
			<choose>
                <when condition="@(context.Variables.GetValueOrDefault<string>("path").ToLower().StartsWith("/deployments/gpt-35-turbo/"))">
<set-backend-service backend-id="lb-gpt-35-turbo" />
</when>
<when condition="@(context.Variables.GetValueOrDefault<string>("path").ToLower().StartsWith("/deployments/gpt-4o-mini/"))">
<set-backend-service backend-id="lb-gpt-4o-mini" />
</when>
<when condition="@(context.Variables.GetValueOrDefault<string>("path").ToLower().StartsWith("/deployments/gpt-4o/"))">
<set-backend-service backend-id="lb-gpt-4o" />
</when>
			</choose>
			<forward-request buffer-request-body="true" buffer-response="false" />
		</retry>
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<choose>
			<when condition="@(context.Response.StatusCode == 503)">
				<set-status code="503" reason="You been duped" />
			</when>
		</choose>
		<base />
	</on-error>
</policies>